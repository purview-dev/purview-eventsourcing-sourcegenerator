<Project>

	<Import Project="$(MSBuildThisFileDirectory)msbuild/variables.props" />
	<Import Project="$(MSBuildThisFileDirectory)msbuild/nuget-packable-default.props" />

	<!-- All C# Projects -->
	<PropertyGroup Label="C# Project Property Groups" Condition="'$(IsCSharpProject)' == 'true'">

		<TargetFramework>net8.0</TargetFramework>

		<Deterministic>true</Deterministic>
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
 		<EmbedUntrackedSources>true</EmbedUntrackedSources>

		<AccelerateBuildsInVisualStudio>true</AccelerateBuildsInVisualStudio>

		<ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>

 		<IsPackable>false</IsPackable>

		<LangVersion>12.0</LangVersion>

		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<AnalysisMode>AllEnabledByDefault</AnalysisMode>
		<AnalysisLevel>5</AnalysisLevel>

		<NoWarn>AD0001;$(NoWarn)</NoWarn>
		<NoWarn>IDE2001;$(NoWarn)</NoWarn>
		<NoWarn>CS1591;$(NoWarn)</NoWarn>
		<NoWarn>CA1014;CA1848;CA2007;CA2201;CA2234;CA2225;CA2254;$(NoWarn)</NoWarn>
		<NoWarn>RCS1090;RCS1108;$(NoWarn)</NoWarn>

		<!-- Default, for running locally - overriden on build. -->
		<VersionSuffix>0.0.1.0</VersionSuffix>

		<!-- This should be in your executable/ buildable project? -->
		<!-- <FileVersion>$(VersionSuffix)</FileVersion>
		<Version>$(VersionSuffix)</Version> -->

		<GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
		<GenerateAssemblyCopyrightAttribute>false</GenerateAssemblyCopyrightAttribute>

	</PropertyGroup>

	<ItemGroup>

		<Using Include="$(RootNamespace)" />

	</ItemGroup>

	<ItemGroup Label="C# Project Item Groups" Condition="'$(IsCSharpProject)' == 'true' AND $(IsTestProject) == 'false'">

		<!-- Embedded Resources -->
		<None Remove="Resources/**/*" />
		<EmbeddedResource Include="Resources/**/*" />

	</ItemGroup>

	<ItemGroup Label="Dynamic Versioning" Condition="'$(IsCSharpProject)' == 'true' AND '$(IsTestProject)' == 'false'">

		<Compile Include="$(AutoMSBuildProps)AssemblyInfo_Shared.cs" Link="Properties/SharedAssemblyInfo.cs" />

	</ItemGroup>

	<!-- Package Projects -->
	<PropertyGroup Label="NuGet Package Project Properties" Condition="'$(IsPackable)' == 'true'">

		<GenerateDocumentationFile>true</GenerateDocumentationFile>

		<!-- Include symbol files (*.pdb) in the built .nupkg -->
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>

	</PropertyGroup>

	<ItemGroup Label="NuGet Package References" Condition="$(IsTestProject) == 'false'">

		<PackageReference Include="Microsoft.SourceLink.GitHub">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>

	</ItemGroup>

	<!-- Test Projects. -->
	<PropertyGroup Label="Testing Project Properties" Condition="'$(IsTestProject)' == 'true'">

		<NoWarn>$(NoWarn);CA1707</NoWarn>

		<CollectCoverage>true</CollectCoverage>
		<CoverletOutput Condition=" '$(OutputPath)' != '' ">$(OutputPath)/</CoverletOutput>
		<CoverletOutputFormat>cobertura,json</CoverletOutputFormat>
		<Exclude>[NSubstitute*]*,[xunit.*]*</Exclude>
		<ExcludeByAttribute>System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute</ExcludeByAttribute>

		<Packable>false</Packable>
		<IsPackable>false</IsPackable>
		<IsPublishable>false</IsPublishable>

		<EnableStaticNativeInstrumentation>False</EnableStaticNativeInstrumentation>
		<EnableDynamicNativeInstrumentation>False</EnableDynamicNativeInstrumentation>

	</PropertyGroup>

	<ItemGroup Label="Test AssemblyInfo and Runner Properties" Condition="'$(IsTestProject)' == 'true'">

		<AssemblyAttribute Include="Xunit.AssemblyTrait">
			<_Parameter1>Category</_Parameter1>
			<_Parameter2>$(TestingType)</_Parameter2>
		</AssemblyAttribute>

		<Compile Include="$(AutoMSBuildProps)AssemblyInfo_SharedTesting.cs" Link="Properties/SharedTestingAssemblyInfo.cs" />
		<Content Include="$(MSBuildThisFileDirectory)xunit/xunit.runner.json" Link="xunit.runner.json" CopyToOutputDirectory="PreserveNewest" />

	</ItemGroup>

	<ItemGroup Label="Testing NuGet Packages" Condition="'$(IsTestProject)' == 'true'">

		<!-- Implicit usings for tests. -->
		<Using Include="FluentAssertions" />
		<Using Include="NSubstitute" />
		<Using Include="Xunit" />

		<PackageReference Include="Microsoft.NET.Test.Sdk" />
		<PackageReference Include="Microsoft.CodeCoverage" />

		<PackageReference Include="FluentAssertions" />
		<PackageReference Include="NCrunch.Framework" />
		<PackageReference Include="NSubstitute" />

		<PackageReference Include="NSubstitute.Analyzers.CSharp">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>

		<PackageReference Include="xunit" />
		<PackageReference Include="xunit.analyzers" />
		<PackageReference Include="xunit.runner.visualstudio">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>

	</ItemGroup>

</Project>
