//HintName: Testing.IntValueEvent.IntValue.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Purview.EventSourcing.SourceGenerator
//     on {Scrubbed}.
//
//     Changes to this file may cause incorrect behaviour and will be lost
//     when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

namespace Testing
{
	partial class TestAggregate
	{
		// Property for field: _intValue
		[global::System.ComponentModel.DataAnnotations.RangeAttribute(1, 100)]
		public int IntValue
		{
			get => _intValue;
			private set
			{
				if (System.Collections.Generic.Comparer<int>.Default.Compare(value, _intValue) != 0)
				{
					RecordAndApplyEvent(new Testing.IntValueEvent() { IntValue = value });
				}
			}
		}

		void ApplyIntValue(Testing.IntValueEvent @event)
		{
			IntValue = @event.IntValue;
		}
	}
}
